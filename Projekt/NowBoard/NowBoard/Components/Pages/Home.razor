@page "/"
@using System.Net;
@using System.Net.Http.Headers;
@using System.Text;
@using System.Xml.Serialization;
@using httpdemo.OjpModel;

<style>
    main {
        background-color: #00157e;
        color: white;
        height: 100vh;
        padding: 20px;
        box-sizing: border-box;
    }

    .header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-top: 20px;
        margin-bottom: 40px;
        padding: 0;
        font-size: 2em;
    }

    .station-title {
        font-size: 1.5em;
        font-weight: bold;
    }

    .clock-embed {
        width: 210px;
        height: 210px;
        border: none;
    }

    .table {
        margin-top: 20px;
        width: 100%;
        border-collapse: collapse;
        font-size: 1.4em;
    }

        .table th,
        .table td {
            border-bottom: 2px solid white;
            padding: 10px;
            text-align: left;
            color: white;
        }

        .table th {
            font-weight: normal;
        }

    .abfahrtzeit {
        font-weight: bold;
    }

    .hinweis {
        color: #ccc;
    }
</style>

@code {
    // Request
    internal class Program
    {
        static async Task Main(string[] args)
        {
            using (var client = new HttpClient())
            {
                client.BaseAddress = new Uri("https://api.opentransportdata.swiss/ojp20");
                // client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("*/*"));
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", "eyJvcmciOiI2NDA2NTFhNTIyZmEwNTAwMDEyOWJiZTEiLCJpZCI6ImMwZDY2ZGI2NmQ3NDQ4ZjM4ODMxMDg5MTM1MWNmY2UwIiwiaCI6Im11cm11cjEyOCJ9");

                var requestData = RequestCreate();
                var request = new StringContent(requestData, Encoding.UTF8, "application/xml");

                var response = await client.PostAsync("", request);

                var responseXML = await response.Content.ReadAsStringAsync();

                var ojpReader = new XmlSerializer(typeof(Ojp));
                var responseOjp = (Ojp?)ojpReader.Deserialize(new StringReader(responseXML));

                var departures = new List<Departure>();

                foreach (var result in responseOjp.OjpResponse.ServiceDelivery.OjpStopEventDelivery.StopEventResults)
                {
                    var linie = result.StopEvent.Service.PublishedServiceName.Text.Value;
                    var estimatedtime = result.StopEvent.ThisCall.CallAtStop.ServiceDeparture.EstimatedTime.AddHours(2);
                    var timetabledtime = result.StopEvent.ThisCall.CallAtStop.ServiceDeparture.TimetabledTime.AddHours(2);
                    var hinweis = estimatedtime - timetabledtime;

                    departures.Add(new Departure
                        {
                            Linie = linie,
                            Ziel = "St. Gallen, Bahnhof",
                            Abfahrt = estimatedtime.ToString("HH:mm"),
                            Hinweis = hinweis.TotalMinutes > 1 ? $"+{hinweis.Minutes} min" : "Pünktlich"
                        });
                }

                var haltestelle = responseOjp.OjpResponse.ServiceDelivery.OjpStopEventDelivery.StopEventResponseContext.Places.PlaceList[0].StopPlace.StopPlaceName.Text.Value;
            }
        }

        private static string RequestCreate()
        {
            return @"<?xml version=""1.0"" encoding=""UTF-8""?>
  <OJP xmlns=""http://www.vdv.de/ojp"" xmlns:siri=""http://www.siri.org.uk/siri"" version=""2.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://www.vdv.de/ojp ../../../../OJP4/OJP.xsd"">
    <OJPRequest>
        <siri:ServiceRequest>
            <siri:RequestTimestamp>2024-06-01T11:24:34.598Z</siri:RequestTimestamp>
            <siri:RequestorRef>MENTZRegTest</siri:RequestorRef>
            <OJPStopEventRequest>
                <siri:RequestTimestamp>2024-06-01T11:24:34.598Z</siri:RequestTimestamp>
                <siri:MessageIdentifier>SER</siri:MessageIdentifier>
                <Location>
                  <PlaceRef>
                      <StopPlaceRef>8574258</StopPlaceRef>
                      <Name>
                          <Text>St. Gallen, Riethuesli</Text>
                      </Name>
                  </PlaceRef>
                  <!-- <DepArrTime>2025-06-12T11:40:21.539Z</DepArrTime> -->
              </Location>
              <Params>
                  <OperatorFilter>
                      <Exclude>false</Exclude>
                      <OperatorRef>11</OperatorRef>
                  </OperatorFilter>
                  <NumberOfResults>5</NumberOfResults>
                  <StopEventType>departure</StopEventType>
                  <IncludePreviousCalls>false</IncludePreviousCalls>
                  <IncludeOnwardCalls>false</IncludeOnwardCalls>
                  <UseRealtimeData>full</UseRealtimeData>
              </Params>
          </OJPStopEventRequest>
      </siri:ServiceRequest>
  </OJPRequest>
</OJP>";
        }
    }

    string StationName = "St. Gallen, Riethüsli";

    class Departure
    {
        public string Linie { get; set; }
        public string Ziel { get; set; }
        public string Abfahrt { get; set; }
        public string Hinweis { get; set; }
    }

    List<Departure> Departures = new List<Departure>
    {
        new Departure { Linie = "", Ziel = "St. Gallen, Bahnhof", Abfahrt = "", Hinweis = "" },
        new Departure { Linie = "", Ziel = "St. Gallen, Bahnhof", Abfahrt = "", Hinweis = "" },
        new Departure { Linie = "", Ziel = "St. Gallen, Bahnhof", Abfahrt = "", Hinweis = "" },
        new Departure { Linie = "", Ziel = "St. Gallen, Bahnhof", Abfahrt = "", Hinweis = "" },
    };
}

<main>
    <div class="header">
        <div>
            <div class="station-title">@StationName</div>
        </div>
        <iframe class="clock-embed" src="https://free.timeanddate.com/clock/i9xawfha/n268/szw210/szh210/hoc000/hbw4/cf100/hgr0/fav0/fiv0/mqc000/mqs3/mql25/mqw6/mqd96/mhc000/mhs3/mhl20/mhw6/mhd96/mmc000/mms3/mml10/mmw2/mmd96/hhw16/hmw16/hmr4/hss3/hsl90"></iframe>
    </div>

    <table class="table">
        <thead>
            <tr>
                <th>Linie</th>
                <th>Ziel</th>
                <th>Abfahrt</th>
                <th>Hinweis</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var dep in Departures)
            {
                <tr>
                    <td>@dep.Linie </td>
                    <td>@dep.Ziel</td>
                    <td class="abfahrtzeit">@dep.Abfahrt</td>
                    <td class="hinweis">@dep.Hinweis</td>
                </tr>
            }
        </tbody>
    </table>
</main>
